1.javascript的typeof返回哪些数据类型
	基本数据类型：number,function,undefined,boolean,string,object
2.例举3种强制类型转换和2种隐式类型转换？
	parseInt parseFloat number 
	+ - = if while forin
	
3.split() join() 的区别
	一个是把字符串按参数拆分成数组，一个是把数组按参数合并成字符串
4.数组方法pop() push() unshift() shift()
pop() 删除最后一个元素并且返回
push() 在数组最后添加元素
shift() 删除第一个元素
unshift() 第一个位置添加元素

5.事件绑定和普通事件有什么区别
	普通事件只能绑定最后一个，事件绑定能绑定多个事件，执行顺序按浏览器不同而不同（addEventListener按顺序，attachEvent乱序）。

6.IE和DOM事件流的区别
函数不一样
参数不一样
一个有on,一个没有on
执行顺序不一样
this指向不同	

7.IE和标准下有哪些兼容性的写法
var ev=ev||event;
var target=ev.srcElement||ev.target;
var clientWidth=document.documentElement.clientWidth || document.body.clientWidth

8.ajax请求的时候get 和post方式的区别
一个在url后面 一个放在虚拟载体里面
有大小限制
安全问题
应用不同 一个是论坛等只需要请求的，一个是类似修改密码的

9.call和apply的区别
Object.call(this,obj1,obj2,obj3)
Object.apply(this,arguments)

10.ajax请求时，如何解释json数据
使用eval parse 鉴于安全性考虑 使用parse更靠谱

11.b继承a的方法
	for(var i in a){
		b[i]=a[i];
	}

12.写一个获取非行间样式的函数
	obj.currentStyle(attr);
	//第二个参数“伪类”,如:after
	window.getComputedStyle(attr,false)

13.事件委托是什么
	利用冒泡，把自身事冒泡给父节点执行。
	
14.闭包是什么，有什么特性，对页面有什么影响
	闭包就是能够读取其他函数内部变量的函数。
	内外函数以及变量在内存中不会消失。容易引起IE内存泄露。

15.如何阻止事件冒泡和默认事件
	阻止默认事件：preventDefault，return false; 
	阻止冒泡传递：e.canceBubble，e.stopPropagation

16.添加 删除 替换插入到某个接点的方法
	appendChild insertBefore removeChild replaceChild 

17.解释jsonp的原理，以及为什么不是真正的ajax
	动态创建script标签，传入回调函数，在其他页面执行回调函数
	与ajax请求无关
	
18.javascript的本地对象，内置对象和宿主对象
	本地对象为array obj regexp等可以new实例化
	内置对象为gload Math 等不可以实例化的
	宿主为浏览器自带的document,window 等
		

19.document load 和document ready的区别
	Document.onload 是在结构和样式加载完才执行js
	Document.ready原生种没有这个方法，jquery中有 $().ready(function)
	
20.”==”和“===”的不同
	前者会自动转换类型
	后者不会
	
21.javascript的同源策略
	一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合，不同源的脚本必须设置domain相同才能访问
	
22.编写一个数组去重的方法
23.排序算法

24.深克隆
	//深克隆，会拷贝父类对象属性，会拷贝属性中的属性
	function deepCopy(obj){
		if(typeof obj!="object"){
			return obj;
		}
		
		var newObj={};
		for(var attr in obj){
			newObj[attr]=deepCopy(obj[attr]);
		}
		return newObj;
	}
25.获取绝对位置
	function getPos(obj) {
		var pos = {left:0, top:0};
		while (obj) {
			pos.left += obj.offsetLeft;
			pos.top += obj.offsetTop;
			obj = obj.offsetParent;
		}
		return pos;
	}
	
26.xml与jquery原理

27.简述Ajax异步机制，Ajax有哪些的好处和弊端，介绍一下Ajax异步请求的原理和过程，Ajax是否可以跨域访问数据，如何解决跨域访问？

28.谈谈javascript数组方法sort()的使用，重点介绍sort()参数的使用及其内部机制。

29.var a='<span id="inner">text</span><span id="inner">text1</span>';
	
	var b=document.createElement("span");
	b.innerHTML=a;
	
	alert(b.innerHTML);	//<span id="inner">text</span><span id="inner">text1</span>
	alert(b.innerText);	//texttext1
	alert(b.outerHTML);	//<span><span id="inner">text</span><span id="inner">text1</span></span>
	
30.
	function x() {alert("0");}
	x();//输出1
	function x() {alert("1");}
	x();//输出1

	var x = function() {alert("0");}
	x();//输出0
	x = function() {alert("1");}
	x();//输出1
	
	//函数表达式只有在调用的时候，js解析器才会读取函数，与声明函数正好相反。所以函数表达式在读取x()时，先找到第一个函数，所以输出0，如果把x()写在第一个函数前，会报错
	
31.
for(i=0, j=0; i<10, j<6; i++, j++){ 
k = i + j; 


